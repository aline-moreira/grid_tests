setwd("~/grid_tests/sysbench")
###################################################
# CPU
###################################################
#############
d_1 <- energy %>% filter(
energy$tempo >= times$start[times$test=="cpu" & times$type=="host" & times$value=="1"] & energy$tempo <= times$end[times$test=="cpu" & times$type=="host" & times$value=="1"]
)
d_1$type <- "host"
d_1$value <- 1
d_2 <- energy %>% filter(
energy$tempo >= times$start[times$test=="cpu" & times$type=="host" & times$value=="2"] & energy$tempo <= times$end[times$test=="cpu" & times$type=="host" & times$value=="2"]
)
d_2$type <- "host"
d_2$value <- 2
d_4 <- energy %>% filter(
energy$tempo >= times$start[times$test=="cpu" & times$type=="host" & times$value=="4"] & energy$tempo <= times$end[times$test=="cpu" & times$type=="host" & times$value=="4"]
)
d_4$type <- "host"
d_4$value <- 4
d_8 <- energy %>% filter(
energy$tempo >= times$start[times$test=="cpu" & times$type=="host" & times$value=="8"] & energy$tempo <= times$end[times$test=="cpu" & times$type=="host" & times$value=="8"]
)
d_8$type <- "host"
d_8$value <- 8
d_16 <- energy %>% filter(
energy$tempo >= times$start[times$test=="cpu" & times$type=="host" & times$value=="16"] & energy$tempo <= times$end[times$test=="cpu" & times$type=="host" & times$value=="16"]
)
d_16$type <- "host"
d_16$value <- 16
d_32 <- energy %>% filter(
energy$tempo >= times$start[times$test=="cpu" & times$type=="host" & times$value=="32"] & energy$tempo <= times$end[times$test=="cpu" & times$type=="host" & times$value=="32"]
)
d_32$type <- "host"
d_32$value <- 32
d_64 <- energy %>% filter(
energy$tempo >= times$start[times$test=="cpu" & times$type=="host" & times$value=="64"] & energy$tempo <= times$end[times$test=="cpu" & times$type=="host" & times$value=="64"]
)
d_64$type <- "host"
d_64$value <- 64
d_80 <- energy %>% filter(
energy$tempo >= times$start[times$test=="cpu" & times$type=="host" & times$value=="80"] & energy$tempo <= times$end[times$test=="cpu" & times$type=="host" & times$value=="80"]
)
d_80$type <- "host"
d_80$value <- 80
cpu_host <- rbind(d_1, d_2)
cpu_host <- rbind(cpu_host, d_4)
cpu_host <- rbind(cpu_host, d_8)
cpu_host <- rbind(cpu_host, d_16)
cpu_host <- rbind(cpu_host, d_32)
cpu_host <- rbind(cpu_host, d_64)
cpu_host <- rbind(cpu_host, d_80)
##################################
#############
d_1 <- energy %>% filter(
energy$tempo >= times$start[times$test=="cpu" & times$type=="docker" & times$value=="1"] & energy$tempo <= times$end[times$test=="cpu" & times$type=="docker" & times$value=="1"]
)
d_1$type <- "docker"
d_1$value <- 1
d_2 <- energy %>% filter(
energy$tempo >= times$start[times$test=="cpu" & times$type=="docker" & times$value=="2"] & energy$tempo <= times$end[times$test=="cpu" & times$type=="docker" & times$value=="2"]
)
d_2$type <- "docker"
d_2$value <- 2
d_4 <- energy %>% filter(
energy$tempo >= times$start[times$test=="cpu" & times$type=="docker" & times$value=="4"] & energy$tempo <= times$end[times$test=="cpu" & times$type=="docker" & times$value=="4"]
)
d_4$type <- "docker"
d_4$value <- 4
d_8 <- energy %>% filter(
energy$tempo >= times$start[times$test=="cpu" & times$type=="docker" & times$value=="8"] & energy$tempo <= times$end[times$test=="cpu" & times$type=="docker" & times$value=="8"]
)
d_8$type <- "docker"
d_8$value <- 8
d_16 <- energy %>% filter(
energy$tempo >= times$start[times$test=="cpu" & times$type=="docker" & times$value=="16"] & energy$tempo <= times$end[times$test=="cpu" & times$type=="docker" & times$value=="16"]
)
d_16$type <- "docker"
d_16$value <- 16
d_32 <- energy %>% filter(
energy$tempo >= times$start[times$test=="cpu" & times$type=="docker" & times$value=="32"] & energy$tempo <= times$end[times$test=="cpu" & times$type=="docker" & times$value=="32"]
)
d_32$type <- "docker"
d_32$value <- 32
d_64 <- energy %>% filter(
energy$tempo >= times$start[times$test=="cpu" & times$type=="docker" & times$value=="64"] & energy$tempo <= times$end[times$test=="cpu" & times$type=="docker" & times$value=="64"]
)
d_64$type <- "docker"
d_64$value <- 64
d_80 <- energy %>% filter(
energy$tempo >= times$start[times$test=="cpu" & times$type=="docker" & times$value=="80"] & energy$tempo <= times$end[times$test=="cpu" & times$type=="docker" & times$value=="80"]
)
d_80$type <- "docker"
d_80$value <- 80
cpu_docker <- rbind(d_1, d_2)
cpu_docker <- rbind(cpu_docker, d_4)
cpu_docker <- rbind(cpu_docker, d_8)
cpu_docker <- rbind(cpu_docker, d_16)
cpu_docker <- rbind(cpu_docker, d_32)
cpu_docker <- rbind(cpu_docker, d_64)
cpu_docker <- rbind(cpu_docker, d_80)
##################################
#############
d_1 <- energy %>% filter(
energy$tempo >= times$start[times$test=="cpu" & times$type=="MV" & times$value=="1"] & energy$tempo <= times$end[times$test=="cpu" & times$type=="MV" & times$value=="1"]
)
d_1$type <- "MV"
d_1$value <- 1
d_2 <- energy %>% filter(
energy$tempo >= times$start[times$test=="cpu" & times$type=="MV" & times$value=="2"] & energy$tempo <= times$end[times$test=="cpu" & times$type=="MV" & times$value=="2"]
)
d_2$type <- "MV"
d_2$value <- 2
d_4 <- energy %>% filter(
energy$tempo >= times$start[times$test=="cpu" & times$type=="MV" & times$value=="4"] & energy$tempo <= times$end[times$test=="cpu" & times$type=="MV" & times$value=="4"]
)
d_4$type <- "MV"
d_4$value <- 4
d_8 <- energy %>% filter(
energy$tempo >= times$start[times$test=="cpu" & times$type=="MV" & times$value=="8"] & energy$tempo <= times$end[times$test=="cpu" & times$type=="MV" & times$value=="8"]
)
d_8$type <- "MV"
d_8$value <- 8
d_16 <- energy %>% filter(
energy$tempo >= times$start[times$test=="cpu" & times$type=="MV" & times$value=="16"] & energy$tempo <= times$end[times$test=="cpu" & times$type=="MV" & times$value=="16"]
)
d_16$type <- "MV"
d_16$value <- 16
d_32 <- energy %>% filter(
energy$tempo >= times$start[times$test=="cpu" & times$type=="MV" & times$value=="32"] & energy$tempo <= times$end[times$test=="cpu" & times$type=="MV" & times$value=="32"]
)
d_32$type <- "MV"
d_32$value <- 32
d_64 <- energy %>% filter(
energy$tempo >= times$start[times$test=="cpu" & times$type=="MV" & times$value=="64"] & energy$tempo <= times$end[times$test=="cpu" & times$type=="MV" & times$value=="64"]
)
d_64$type <- "MV"
d_64$value <- 64
d_80 <- energy %>% filter(
energy$tempo >= times$start[times$test=="cpu" & times$type=="MV" & times$value=="80"] & energy$tempo <= times$end[times$test=="cpu" & times$type=="MV" & times$value=="80"]
)
d_80$type <- "MV"
d_80$value <- 80
cpu_MV<- rbind(d_1, d_2)
cpu_MV <- rbind(cpu_MV, d_4)
cpu_MV <- rbind(cpu_MV, d_8)
cpu_MV <- rbind(cpu_MV, d_16)
cpu_MV <- rbind(cpu_MV, d_32)
cpu_MV <- rbind(cpu_MV, d_64)
cpu_MV <- rbind(cpu_MV, d_80)
##################################
#############
d_1 <- energy %>% filter(
energy$tempo >= times$start[times$test=="cpu" & times$type=="dockerMV" & times$value=="1"] & energy$tempo <= times$end[times$test=="cpu" & times$type=="dockerMV" & times$value=="1"]
)
d_1$type <- "dockerMV"
d_1$value <- 1
d_2 <- energy %>% filter(
energy$tempo >= times$start[times$test=="cpu" & times$type=="dockerMV" & times$value=="2"] & energy$tempo <= times$end[times$test=="cpu" & times$type=="dockerMV" & times$value=="2"]
)
d_2$type <- "dockerMV"
d_2$value <- 2
d_4 <- energy %>% filter(
energy$tempo >= times$start[times$test=="cpu" & times$type=="dockerMV" & times$value=="4"] & energy$tempo <= times$end[times$test=="cpu" & times$type=="dockerMV" & times$value=="4"]
)
d_4$type <- "dockerMV"
d_4$value <- 4
d_8 <- energy %>% filter(
energy$tempo >= times$start[times$test=="cpu" & times$type=="dockerMV" & times$value=="8"] & energy$tempo <= times$end[times$test=="cpu" & times$type=="dockerMV" & times$value=="8"]
)
d_8$type <- "dockerMV"
d_8$value <- 8
d_16 <- energy %>% filter(
energy$tempo >= times$start[times$test=="cpu" & times$type=="dockerMV" & times$value=="16"] & energy$tempo <= times$end[times$test=="cpu" & times$type=="dockerMV" & times$value=="16"]
)
d_16$type <- "dockerMV"
d_16$value <- 16
d_32 <- energy %>% filter(
energy$tempo >= times$start[times$test=="cpu" & times$type=="dockerMV" & times$value=="32"] & energy$tempo <= times$end[times$test=="cpu" & times$type=="dockerMV" & times$value=="32"]
)
d_32$type <- "dockerMV"
d_32$value <- 32
d_64 <- energy %>% filter(
energy$tempo >= times$start[times$test=="cpu" & times$type=="dockerMV" & times$value=="64"] & energy$tempo <= times$end[times$test=="cpu" & times$type=="dockerMV" & times$value=="64"]
)
d_64$type <- "dockerMV"
d_64$value <- 64
d_80 <- energy %>% filter(
energy$tempo >= times$start[times$test=="cpu" & times$type=="dockerMV" & times$value=="80"] & energy$tempo <= times$end[times$test=="cpu" & times$type=="dockerMV" & times$value=="80"]
)
d_80$type <- "dockerMV"
d_80$value <- 80
cpu_dockerMV<- rbind(d_1, d_2)
cpu_dockerMV <- rbind(cpu_dockerMV, d_4)
cpu_dockerMV <- rbind(cpu_dockerMV, d_8)
cpu_dockerMV <- rbind(cpu_dockerMV, d_16)
cpu_dockerMV <- rbind(cpu_dockerMV, d_32)
cpu_dockerMV <- rbind(cpu_dockerMV, d_64)
cpu_dockerMV <- rbind(cpu_dockerMV, d_80)
##########
cpu <- as.data.frame(t(data.frame(
c("host",scaleFUN(mean(cpu_host$servidor1[cpu_host$value==1])),1),
c("host",scaleFUN(mean(cpu_host$servidor1[cpu_host$value==2])),2),
c("host",scaleFUN(mean(cpu_host$servidor1[cpu_host$value==4])),4),
c("host",scaleFUN(mean(cpu_host$servidor1[cpu_host$value==8])),8),
c("host",scaleFUN(mean(cpu_host$servidor1[cpu_host$value==16])),16),
c("host",scaleFUN(mean(cpu_host$servidor1[cpu_host$value==32])),32),
c("host",scaleFUN(mean(cpu_host$servidor1[cpu_host$value==64])),64),
c("host",scaleFUN(mean(cpu_host$servidor1[cpu_host$value==80])),80),
c("docker",scaleFUN(mean(cpu_docker$servidor1[cpu_docker$value==1])),1),
c("docker",scaleFUN(mean(cpu_docker$servidor1[cpu_docker$value==2])),2),
c("docker",scaleFUN(mean(cpu_docker$servidor1[cpu_docker$value==4])),4),
c("docker",scaleFUN(mean(cpu_docker$servidor1[cpu_docker$value==8])),8),
c("docker",scaleFUN(mean(cpu_docker$servidor1[cpu_docker$value==16])),16),
c("docker",scaleFUN(mean(cpu_docker$servidor1[cpu_docker$value==32])),32),
c("docker",scaleFUN(mean(cpu_docker$servidor1[cpu_docker$value==64])),64),
c("docker",scaleFUN(mean(cpu_docker$servidor1[cpu_docker$value==80])),80),
c("MV",scaleFUN(mean(cpu_MV$servidor1[cpu_MV$value==1])),1),
c("MV",scaleFUN(mean(cpu_MV$servidor1[cpu_MV$value==2])),2),
c("MV",scaleFUN(mean(cpu_MV$servidor1[cpu_MV$value==4])),4),
c("MV",scaleFUN(mean(cpu_MV$servidor1[cpu_MV$value==8])),8),
c("MV",scaleFUN(mean(cpu_MV$servidor1[cpu_MV$value==16])),16),
c("MV",scaleFUN(mean(cpu_MV$servidor1[cpu_MV$value==32])),32),
c("MV",scaleFUN(mean(cpu_MV$servidor1[cpu_MV$value==64])),64),
c("MV",scaleFUN(mean(cpu_MV$servidor1[cpu_MV$value==80])),80),
c("dockerMV",scaleFUN(mean(cpu_dockerMV$servidor1[cpu_dockerMV$value==1])),1),
c("dockerMV",scaleFUN(mean(cpu_dockerMV$servidor1[cpu_dockerMV$value==2])),2),
c("dockerMV",scaleFUN(mean(cpu_dockerMV$servidor1[cpu_dockerMV$value==4])),4),
c("dockerMV",scaleFUN(mean(cpu_dockerMV$servidor1[cpu_dockerMV$value==8])),8),
c("dockerMV",scaleFUN(mean(cpu_dockerMV$servidor1[cpu_dockerMV$value==16])),16),
c("dockerMV",scaleFUN(mean(cpu_dockerMV$servidor1[cpu_dockerMV$value==32])),32),
c("dockerMV",scaleFUN(mean(cpu_dockerMV$servidor1[cpu_dockerMV$value==64])),64),
c("dockerMV",scaleFUN(mean(cpu_dockerMV$servidor1[cpu_dockerMV$value==80])),80)
)))
colnames(cpu)<- c("type","power","cpu")
tiff("cpu.tiff", width= 3600, height= 2200, units="px", res=400,compression = 'lzw')
cpu_plot <- ggplot(data=cpu, aes(x=cpu, y=power, fill=type))+
geom_bar(colour="black",position="dodge",stat="identity")+
theme_classic()+
theme(
legend.position="top",
axis.text.x = element_text(
angle = 0,
hjust = 0.7,
size=12
),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(color = "black"),
axis.text.y = element_text(size=12),
axis.title.x = element_text(size=12),
axis.title.y = element_text(size=12),
legend.text = element_text(size=12),
legend.title = element_text(size=12),
legend.key = element_blank(),
legend.box = "vertical"
)+
labs(
x=("vCPU (unidades)"),
y="Consumo (W/s)",
fill= "Ambiente"
)+
scale_x_discrete(limits=c("1","2","4","8","16","32","64","80"))+
scale_fill_d3(labels = c("Docker", "Docker sobre MV", "Host", "MV"))
plot(cpu_plot)
dev.off()
source('~/grid_tests/sysbench/generateGraphs.R', echo=TRUE)
View(cpu)
