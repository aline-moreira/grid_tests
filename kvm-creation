#CONFIGURA O NODE
oarsub -I -l slash_22=1+{"virtual!='NO'"}/nodes=1,walltime=5
cp /grid5000/virt-images/debian10-x64-base.qcow2 /tmp/
qemu-img create -f qcow2 -o backing_file=/tmp/debian10-x64-base.qcow2 /tmp/domain1.qcow2

# FAZER O TESTE QUE TU QUER NO HOST
sudo-g5k apt-get install hardinfo

git clone https://github.com/aline-moreira/hardinfo.git
cd ~/aline-kvm-images/hardinfo/dahu-kvm
for i in {0..10}; do hardinfo -r -f html > host-$i.html; done;

#Agora adiciona no git
git add *
git commit -m "update"
git push


# FAZER O TESTE QUE TU QUER NO DOCKER
sudo-g5k /grid5000/code/bin/g5k-setup-docker

#Baixar a imagem docker com hardinfo pronto.
docker run -it linuxbench/hardinfo:zesty /bin/bash

#Faca o teste

git config --global user.email "alinesmoreiraicloud@gmail.com"
git config --global user.name "Aline Moreira"
git clone https://github.com/aline-moreira/hardinfo.git

cd hardinfo/dahu-kvm
for i in {0..10}; do hardinfo -r -f html > docker-$i.html; done;

#Agora adiciona no git
git add *
git commit -m "update"
git push

#Exit container
exit

sudo-g5k stop docker

# LIGAR A VM
cd /home/mpillon/aline-kvm-images

# O 64 DO -SMP DEVE SER ALTERADO DE ACORDO COM A QUANTIDADE DE CPU QUE VOCE QUER QUE A VM TENHA
# O MAC ADDRESS DEVE SER ATUALIZADO DE ACORDO COM A SUBREDE QUE A GRID TE DEU

MAC_ADDRESS=`g5k-subnets -im | tail -1 | awk '{print $2}'`
MAX_CPU=`lscpu | grep "CPU(s)" | awk '{print $2}' | head -1`

kvm -smp $MAX_CPU -m 16384 -hda /tmp/debian10-x64-base.qcow2 -netdev bridge,id=br0 -device virtio-net-pci,netdev=br0,id=ens3,mac=$MAC_ADDRESS -nographic

apt-get install hardinfo git -y

git config --global user.email "alinesmoreiraicloud@gmail.com"
git config --global user.name "Aline Moreira"
git clone https://github.com/aline-moreira/hardinfo.git

cd hardinfo/dahu-kvm
for i in {0..10}; do hardinfo -r -f text > vm-$i.txt; done;

#Agora adiciona no git
git add *
git commit -m "update"
git push

# FAZER O TESTE QUE TU QUER NA VM User: root passwd: grid5000
apt-get install hardinfo

#FAZER O TESTE QUE TU QUER NO DOCKER DA VM


#Sair da VM
shutdown -hP now





# UTILIZNADO O LINPACK
wget registrationcenter-download.intel.com/akdlm/irc_nas/2169/l_lpk_p_10.3.4.007.tgz

tar -zxvf l_lpk_p_10.3.4.007.tgz
cd linpack_10.3.4/benchmarks/linpack

#LINPACK INPUT FILE
echo '
Intel(R) Optimized LINPACK Benchmark datafile
        User-defined string
        1       # number of tests
        5000    # number of equations (problem sizes)
        10000   # leading dimensions
        100     # number of times to run a test (trials)
        1000000 # alignment values (in KBytes)
' > input_data

#Executa o linpack
./xlinpack_xeon32 < input_data > output.log

#INSTALANDO O DOCKER NA VM
wget https://download.docker.com/linux/debian/dists/buster/pool/stable/amd64/containerd.io_1.2.6-3_amd64.deb
wget https://download.docker.com/linux/debian/dists/buster/pool/stable/amd64/docker-ce-cli_19.03.5~3-0~debian-buster_amd64.deb
wget https://download.docker.com/linux/debian/dists/buster/pool/stable/amd64/docker-ce_19.03.5~3-0~debian-buster_amd64.deb

dpkg -i containerd.io_1.2.6-3_amd64.deb
dpkg -i docker-ce-cli_19.03.5~3-0~debian-buster_amd64.deb
dpkg -i docker-ce_19.03.5~3-0~debian-buster_amd64.deb

#EXECUTANDO O DOCKER DEBIAN
docker run -it debian:stable /bin/bash

apt-get update -y
apt-get install git wget vim -y

git config --global user.email "alinesmoreiraicloud@gmail.com"
git config --global user.name "Aline Moreira"
git clone https://github.com/aline-moreira/hardinfo.git
