#CONFIGURA A QUANTIDADE DE TEMPO PADRAO PARA OS TESTES
TEST_TIME=300

########################
### CONFIGURA O NODE ###
########################
oarsub -I -l slash_22=1+{"virtual!='NO' AND cluster='gemini'"}/nodes=1,walltime=5
cp /grid5000/virt-images/debian10-x64-base.qcow2 /tmp/
qemu-img create -f qcow2 -o backing_file=/tmp/debian10-x64-base.qcow2 /tmp/domain1.qcow2

#########################################
### FAZER O TESTE QUE TU QUER NO HOST ###
#########################################
sudo-g5k apt-get update -y
sudo-g5k apt-get install git wget vim sysbench -y

git config --global user.email "alinesmoreiraicloud@gmail.com"
git config --global user.name "Aline Moreira"
#git clone https://github.com/aline-moreira/grid_tests.git
cd grid_tests

    ######################################
    ###  UTILIZNADO O LINPACK  NO HOST ###
    ######################################
    wget registrationcenter-download.intel.com/akdlm/irc_nas/2169/l_lpk_p_10.3.4.007.tgz

    tar -zxvf l_lpk_p_10.3.4.007.tgz
    cd linpack_10.3.4/benchmarks/linpack

    #LINPACK INPUT FILE
    echo 'Intel(R) Optimized LINPACK Benchmark datafile
            User-defined string
            1       # number of tests
            5000    # number of equations (problem sizes)
            10000   # leading dimensions
            100     # number of times to run a test (trials)
            1000000 # alignment values (in KBytes)' > input_data

    #Mova o diretorio para a pasta do linpack!!!!

    #Executa o linpack
    date -u >> host.log && ./xlinpack_xeon32 < input_data >> host.log && date -u >> host.log

    ######################################
    ### UTILIZANDO O SYSBENCH NO HOST ####
    ######################################

    echo "Host;start;idle;`date -u`" >> idle_host.log && sleep 300 &&     echo "Host;end;idle;`date -u`" >> idle_host.log;

    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
    !!!!!!!!MOVA O DIRETORIO PARA A PASTA DO TEST SYSBENCH!!!!!!!!!
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

    for cpu in {1,2,4,8,16,32,64,80}; do
        echo "Host;start;$cpu;`date -u`" >> sysbench_host.log;
        sysbench --test=cpu --cpu-max-prime=2000000000 --forced-shutdown=0 --threads=$cpu --max-time=5 run
        echo "Host;end;$cpu;`date -u`" >> sysbench_host.log;
        sleep 30;
    done;


    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
    !!!!!!!!MOVA O DIRETORIO PARA A PASTA DO TEST SYSBENCH!!!!!!!!!
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
    echo "Host;start;`date -u`" >> sysbench_host.log && sysbench --test=memory --memory-block-size=1G --memory-total-size=10000G --time=300 run && echo "Host;end;`date -u`" >> sysbench_host.log && sleep 30

    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
    !!!!!!!!MOVA O DIRETORIO PARA A PASTA DO TEST SYSBENCH IO !!!!!!!!!
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
    TOTAL_SIZE=15G
    mkdir io_test && cd io_test && sysbench --test=fileio --file-total-size=$TOTAL_SIZE prepare && echo "Host;start;`date -u`" >> ../sysbench_io_docker_vm.log && sysbench --test=fileio --file-total-size=$TOTAL_SIZE --file-test-mode=rndrw --time=300 --max-requests=0 run && echo "Host;end;`date -u`" >> ../sysbench_io_docker_vm.log && sleep 30 && sysbench --test=fileio --file-total-size=$TOTAL_SIZE cleanup && cd .. && rm -r io_test

#Agora adiciona no git
git add *
git commit -m "update"
git push

###########################################
### FAZER O TESTE QUE TU QUER NO DOCKER ###
###########################################
sudo-g5k /grid5000/code/bin/g5k-setup-docker

#Baixar e configurar o git no docker DEBIAN 10
docker run -it debian:stable /bin/bash

apt-get update -y
apt-get install git wget vim sysbench -y

git config --global user.email "alinesmoreiraicloud@gmail.com"
git config --global user.name "Aline Moreira"
git clone https://github.com/aline-moreira/grid_tests.git

    ########################################
    ###  UTILIZNADO O LINPACK  NO DOCKER ###
    ########################################
    wget registrationcenter-download.intel.com/akdlm/irc_nas/2169/l_lpk_p_10.3.4.007.tgz

    tar -zxvf l_lpk_p_10.3.4.007.tgz
    cd linpack_10.3.4/benchmarks/linpack

    #LINPACK INPUT FILE
    echo 'Intel(R) Optimized LINPACK Benchmark datafile
            User-defined string
            1       # number of tests
            5000    # number of equations (problem sizes)
            10000   # leading dimensions
            100     # number of times to run a test (trials)
            1000000 # alignment values (in KBytes)' > input_data

    #Mova o diretorio para a pasta do linpack!!!!

    #Executa o linpack
    date -u >> docker.log && ./xlinpack_xeon32 < input_data >> docker.log && date -u >> docker.log

    ########################################
    ### UTILIZANDO O SYSBENCH NO DOCKER ####
    ########################################

    echo "Docker;start;idle;`date -u`" >> idle_docker.log && sleep 300 &&     echo "Docker;end;idle;`date -u`" >> idle_docker.log;

    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
    !!!!!!!!MOVA O DIRETORIO PARA A PASTA DO TEST SYSBENCH!!!!!!!!!
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
    for cpu in {1,2,4,8,16,32,64,80}; do
        echo "Docker;start;$cpu;`date -u`" >> sysbench_docker.log;
        sysbench --test=cpu --cpu-max-prime=2000000000 --forced-shutdown=0 --threads=$cpu --max-time=5 run
        echo "Docker;end;$cpu;`date -u`" >> sysbench_docker.log;
        sleep 30;
    done;

    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
    !!!!!!!!MOVA O DIRETORIO PARA A PASTA DO TEST SYSBENCH!!!!!!!!!
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
    echo "Docker;start;`date -u`" >> sysbench_docker.log && sysbench --test=memory --memory-block-size=1G --memory-total-size=10000G --time=300 run && echo "Docker;end;`date -u`" >> sysbench_docker.log && sleep 30

    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
    !!!!!!!!MOVA O DIRETORIO PARA A PASTA DO TEST SYSBENCH IO !!!!!!!!!
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
    TOTAL_SIZE=15G
    mkdir io_test && cd io_test && sysbench --test=fileio --file-total-size=$TOTAL_SIZE prepare && echo "Docker;start;`date -u`" >> ../sysbench_io_docker_vm.log && sysbench --test=fileio --file-total-size=$TOTAL_SIZE --file-test-mode=rndrw --time=300 --max-requests=0 run && echo "Docker;end;`date -u`" >> ../sysbench_io_docker_vm.log && sleep 30 && sysbench --test=fileio --file-total-size=$TOTAL_SIZE cleanup && cd .. && rm -r io_test

#Agora adiciona no git
git add *
git commit -m "update"
git push

#Exit container
exit

sudo-g5k stop docker

##############################
###      LIGAR A VM        ###
##############################

#O MAC_ADDRESS É PEGO AUTOMATICAMENTE
MAC_ADDRESS=`g5k-subnets -im | tail -1 | awk '{print $2}'`

#A QUANTIDADE DE VCPU É CONFIGURADO AUTOMATICAMENTE PARA PEGAR TODAS AS CPUS DO HOST, CASO QUEIRA UM NUMERO MENOR COLOQUE MANUALMENTE O VALOR EM MAX_CPU

#MAX_CPU=2
MAX_CPU=`lscpu | grep "CPU(s)" | awk '{print $2}' | head -1`

kvm -smp $MAX_CPU -m 16384 -hda /tmp/debian10-x64-base.qcow2 -netdev bridge,id=br0 -device virtio-net-pci,netdev=br0,id=ens3,mac=$MAC_ADDRESS -nographic

# FAZER O TESTE NA VM User: root passwd: grid5000

apt-get install git wget vim sysbench -y

git config --global user.email "alinesmoreiraicloud@gmail.com"
git config --global user.name "Aline Moreira"
git clone https://github.com/aline-moreira/grid_tests.git

    ###################################
    ###  UTILIZNADO O LINPACK NA VM ###
    ###################################
    wget registrationcenter-download.intel.com/akdlm/irc_nas/2169/l_lpk_p_10.3.4.007.tgz

    tar -zxvf l_lpk_p_10.3.4.007.tgz
    cd linpack_10.3.4/benchmarks/linpack

    #LINPACK INPUT FILE
    echo 'Intel(R) Optimized LINPACK Benchmark datafile
            User-defined string
            1       # number of tests
            5000    # number of equations (problem sizes)
            10000   # leading dimensions
            100     # number of times to run a test (trials)
            1000000 # alignment values (in KBytes)' > input_data

    #Mova o diretorio para a pasta do linpack!!!!

    #Executa o linpack
    date -u >> vm.log && ./xlinpack_xeon32 < input_data >> vm.log && date -u >> vm.log


    ####################################
    ### UTILIZANDO O SYSBENCH NA VM ####
    ####################################

    echo "Vm;start;idle;`date -u`" >> idle_vm.log && sleep 300 &&     echo "Vm;end;idle;`date -u`" >> idle_vm.log;

    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
    !!!!!!!!MOVA O DIRETORIO PARA A PASTA DO TEST SYSBENCH!!!!!!!!!
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

    for cpu in {1,2,4,8,16,32,64,80}; do
        echo "MV;start;$cpu;`date -u`" >> sysbench_vm.log;
        sysbench --test=cpu --cpu-max-prime=2000000000 --forced-shutdown=0 --threads=$cpu --max-time=5 run
        echo "MV;end;$cpu;`date -u`" >> sysbench_vm.log;
        sleep 30;
    done;

    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
    !!!!!!!!MOVA O DIRETORIO PARA A PASTA DO TEST SYSBENCH MEMORIA!!!!!!!!!
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
    echo "MV;start;`date -u`" >> sysbench_vm.log && sysbench --test=memory --memory-block-size=1G --memory-total-size=10000G --time=300 run && echo "MV;end;`date -u`" >> sysbench_vm.log && sleep 30

    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
    !!!!!!!!MOVA O DIRETORIO PARA A PASTA DO TEST SYSBENCH IO !!!!!!!!!
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
    TOTAL_SIZE=15G
    mkdir io_test && cd io_test && sysbench --test=fileio --file-total-size=$TOTAL_SIZE prepare && echo "MV;start;`date -u`" >> ../sysbench_io_docker_vm.log && sysbench --test=fileio --file-total-size=$TOTAL_SIZE --file-test-mode=rndrw --time=300 --max-requests=0 run && echo "MV;end;`date -u`" >> ../sysbench_io_docker_vm.log && sleep 30 && sysbench --test=fileio --file-total-size=$TOTAL_SIZE cleanup && cd .. && rm -r io_test

#Agora adiciona no git
git add *
git commit -m "update"
git push

#################################################
### FAZER O TESTE QUE TU QUER NO DOCKER DA VM ###
#################################################

    #################################
    ### INSTALANDO O DOCKER NA VM ###
    #################################

    wget https://download.docker.com/linux/debian/dists/buster/pool/stable/amd64/containerd.io_1.2.6-3_amd64.deb
    wget https://download.docker.com/linux/debian/dists/buster/pool/stable/amd64/docker-ce-cli_19.03.5~3-0~debian-buster_amd64.deb
    wget https://download.docker.com/linux/debian/dists/buster/pool/stable/amd64/docker-ce_19.03.5~3-0~debian-buster_amd64.deb

    dpkg -i containerd.io_1.2.6-3_amd64.deb
    dpkg -i docker-ce-cli_19.03.5~3-0~debian-buster_amd64.deb
    dpkg -i docker-ce_19.03.5~3-0~debian-buster_amd64.deb

    ##################################
    ### EXECUTANDO O DOCKER DEBIAN ###
    ##################################
    docker run -it debian:stable /bin/bash

    apt-get update -y
    apt-get install git wget vim sysbench -y

    git config --global user.email "alinesmoreiraicloud@gmail.com"
    git config --global user.name "Aline Moreira"
    git clone https://github.com/aline-moreira/grid_tests.git

    ######################################
    ###  UTILIZNADO O LINPACK NO DOCKER SOBRE VM###
    ######################################
    wget registrationcenter-download.intel.com/akdlm/irc_nas/2169/l_lpk_p_10.3.4.007.tgz

    tar -zxvf l_lpk_p_10.3.4.007.tgz
    cd linpack_10.3.4/benchmarks/linpack

    #LINPACK INPUT FILE
    echo 'Intel(R) Optimized LINPACK Benchmark datafile
            User-defined string
            1       # number of tests
            5000    # number of equations (problem sizes)
            10000   # leading dimensions
            100     # number of times to run a test (trials)
            1000000 # alignment values (in KBytes)' > input_data

    #Mova o diretorio para a pasta do linpack!!!!

    #Executa o linpack
    date -u >> docker_vm.log && ./xlinpack_xeon32 < input_data >> docker_vm.log && date -u >> docker_vm.log

    #################################################
    ### UTILIZANDO O SYSBENCH NO DOCKER SOBRE VM ####
    #################################################

    echo "Docker sobre MV;start;idle;`date -u`" >> idle_docker_vm.log && sleep 300 &&     echo "Docker sobre MV;end;idle;`date -u`" >> idle_docker_vm.log;

    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
    !!!!!!!!MOVA O DIRETORIO PARA A PASTA DO TEST SYSBENCH CPU!!!!!!!!!
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

    for cpu in {1,2,4,8,16,32,64,80}; do
        echo "Docker sobre MV;start;$cpu;`date -u`" >> sysbench_docker_vm.log;
        sysbench --test=cpu --cpu-max-prime=2000000000 --forced-shutdown=0 --threads=$cpu --max-time=5 run
        echo "Docker sobre MV;end;$cpu;`date -u`" >> sysbench_docker_vm.log;
        sleep 30;
    done;

    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
    !!!!!!!!MOVA O DIRETORIO PARA A PASTA DO TEST SYSBENCH MEMORIA!!!!!!!!!
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

    echo "Docker sobre MV;start;`date -u`" >> sysbench_docker_vm.log && sysbench --test=memory --memory-block-size=1G --memory-total-size=10000G --time=300 run && echo "Docker sobre MV;end;`date -u`" >> sysbench_docker_vm.log && sleep 30


    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
    !!!!!!!!MOVA O DIRETORIO PARA A PASTA DO TEST SYSBENCH IO !!!!!!!!!
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
    TOTAL_SIZE=15G
    mkdir io_test && cd io_test && sysbench --test=fileio --file-total-size=$TOTAL_SIZE prepare && echo "Docker sobre MV;start;`date -u`" >> ../sysbench_io_docker_vm.log && sysbench --test=fileio --file-total-size=$TOTAL_SIZE --file-test-mode=rndrw --time=300 --max-requests=0 run && echo "Docker sobre MV;end;`date -u`" >> ../sysbench_io_docker_vm.log && sleep 30 && sysbench --test=fileio --file-total-size=$TOTAL_SIZE cleanup && cd .. && rm -r io_test

    #######################
    #Agora adiciona no git#
    #######################
    git add *
    git commit -m "update"
    git push

    #Exit container
    exit

#############
#Sair da VM #
#############
shutdown -hP now

#NESSE PONTO, VOCE ESTÁ NO HOST, GERE O ARQUIVO DE ENERGIA E SUBA NO GIT.

curl -kn https://api.grid5000.fr/stable/sites/lyon/metrics/power/timeseries/?job_id=$OAR_JOB_ID > /home/mpillon/grid_tests/energy_"$OAR_JOB_ID".json

##############################################################
###             FIM TESTES CPU, RAM E IO                   ###
##############################################################

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!TESTE DE REDE!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
##############################################################
##################################################
### CONFIGURA 2 NODES PARA FAZER TESTE DE REDE ###
##################################################
oarsub -I -l slash_22=1+{"virtual!='NO' AND cluster='lyon'"}/nodes=2,walltime=5

##### CRIOU UM JOB COM 2 NODES E AUTOMATICAMENTE JÁ ENTRA NO NÓ SERVIDOR
##### EM OUTRA ABA DO TMUX FACA
oarsub -C `oarstat -u mpillon | awk 'FNR == 3 {print $1}'`

oarsh `tail -1 $OAR_FILE_NODES`

##### NESTE MOMENTO, O SEGUNDO TERMINAL ESTARÁ CONECTADO AO 2 NÓ, O QUAL SERÁ UTILIZADO COMO CLIENTE

###########################################################
##### EM CADA UM DOS NÓS FAÇA O SEGUINTE PROCEDIMENTO #####
###########################################################

cp /grid5000/virt-images/debian10-x64-base.qcow2 /tmp/
qemu-img create -f qcow2 -o backing_file=/tmp/debian10-x64-base.qcow2 /tmp/domain1.qcow2

#########################################
### FAZER O TESTE QUE TU QUER NO HOST ###
#########################################
sudo-g5k apt-get update -y
sudo-g5k apt-get install git nuttcp -y

git config --global user.email "alinesmoreiraicloud@gmail.com"
git config --global user.name "Aline Moreira"

cd grid_tests

    ##############################
    ## LIGAR O NUTTCP NO SERVER ##
    ##############################

    nuttcp -S

    ##############################
    ## LIGAR O NUTTCP NO CLIENT ##
    ##############################

    for bw in {1,10,100,1000,10000}; do
        echo "host;start;$bw;`date -u`" >> nuttcp_host.log && nuttcp -r -R"$bw"M -T300 `tail -1 $OAR_FILE_NODES` && echo "host;end;$bw;`date -u`" >> nuttcp_host.log && sleep 0;
    done;

#Agora adiciona no git
git add *
git commit -m "update"
git push

###########################################
### FAZER O TESTE QUE TU QUER NO DOCKER ###
###########################################
sudo-g5k /grid5000/code/bin/g5k-setup-docker

#Baixar e configurar o git no docker DEBIAN 10
docker run -it debian:stable /bin/bash

apt-get update -y
apt-get install git nuttcp -y

git config --global user.email "alinesmoreiraicloud@gmail.com"
git config --global user.name "Aline Moreira"
git clone https://github.com/aline-moreira/grid_tests.git

    ##############################
    ## LIGAR O NUTTCP NO SERVER ##
    ##############################

    nuttcp -S

    ##############################
    ## LIGAR O NUTTCP NO CLIENT ##
    ##############################

    for bw in {1,10,100,1000,10000}; do
        echo "docker;start;$bw;`date -u`" >> nuttcp_docker.log && nuttcp -r -R"$bw"M -T300 `tail -1 $OAR_FILE_NODES` && echo "docker;end;$bw;`date -u`" >> nuttcp_docker.log && sleep 0;
    done;

#Agora adiciona no git
git add *
git commit -m "update"
git push

#Exit container
exit

sudo-g5k stop docker

##############################
###      LIGAR A VM        ###
##############################

#O MAC_ADDRESS É PEGO AUTOMATICAMENTE
MAC_ADDRESS1 =`g5k-subnets -im | tail -2 | awk 'FNR == 1 {print $2}'`
MAC_ADDRESS2 =`g5k-subnets -im | tail -2 | awk 'FNR == 2 {print $2}'`

#A QUANTIDADE DE VCPU É CONFIGURADO AUTOMATICAMENTE PARA PEGAR TODAS AS CPUS DO HOST, CASO QUEIRA UM NUMERO MENOR COLOQUE MANUALMENTE O VALOR EM MAX_CPU

#MAX_CPU=2
MAX_CPU=`lscpu | grep "CPU(s)" | awk '{print $2}' | head -1`

######## NO SERVIDOR
kvm -smp $MAX_CPU -m 16384 -hda /tmp/debian10-x64-base.qcow2 -netdev bridge,id=br0 -device virtio-net-pci,netdev=br0,id=ens3,mac=$MAC_ADDRESS1 -nographic

######## NO CLIENT
kvm -smp $MAX_CPU -m 16384 -hda /tmp/debian10-x64-base.qcow2 -netdev bridge,id=br0 -device virtio-net-pci,netdev=br0,id=ens3,mac=$MAC_ADDRESS2 -nographic

# FAZER O TESTE NA VM User: root passwd: grid5000

apt-get install git nuttcp -y

git config --global user.email "alinesmoreiraicloud@gmail.com"
git config --global user.name "Aline Moreira"
git clone https://github.com/aline-moreira/grid_tests.git

    ##############################
    ## LIGAR O NUTTCP NO SERVER ##
    ##############################

    nuttcp -S

    ##############################
    ## LIGAR O NUTTCP NO CLIENT ##
    ##############################

    for bw in {1,10,100,1000,10000}; do
        echo "host;start;$bw;`date -u`" >> nuttcp_host.log && nuttcp -r -R"$bw"M -T300 `tail -1 $OAR_FILE_NODES` && echo "host;end;$bw;`date -u`" >> nuttcp_host.log && sleep 0;
    done;

#Agora adiciona no git
git add *
git commit -m "update"
git push

#################################################
### FAZER O TESTE QUE TU QUER NO DOCKER DA VM ###
#################################################

    #################################
    ### INSTALANDO O DOCKER NA VM ###
    #################################

    wget https://download.docker.com/linux/debian/dists/buster/pool/stable/amd64/containerd.io_1.2.6-3_amd64.deb
    wget https://download.docker.com/linux/debian/dists/buster/pool/stable/amd64/docker-ce-cli_19.03.5~3-0~debian-buster_amd64.deb
    wget https://download.docker.com/linux/debian/dists/buster/pool/stable/amd64/docker-ce_19.03.5~3-0~debian-buster_amd64.deb

    dpkg -i containerd.io_1.2.6-3_amd64.deb
    dpkg -i docker-ce-cli_19.03.5~3-0~debian-buster_amd64.deb
    dpkg -i docker-ce_19.03.5~3-0~debian-buster_amd64.deb

    ##################################
    ### EXECUTANDO O DOCKER DEBIAN ###
    ##################################
    docker run -it debian:stable /bin/bash

    apt-get update -y
    apt-get install git nuttcp -y

    git config --global user.email "alinesmoreiraicloud@gmail.com"
    git config --global user.name "Aline Moreira"
    git clone https://github.com/aline-moreira/grid_tests.git

        ##############################
        ## LIGAR O NUTTCP NO SERVER ##
        ##############################

        nuttcp -S

        ##############################
        ## LIGAR O NUTTCP NO CLIENT ##
        ##############################

        for bw in {1,10,100,1000,10000}; do
            echo "host;start;$bw;`date -u`" >> nuttcp_host.log && nuttcp -r -R"$bw"M -T300 `tail -1 $OAR_FILE_NODES` && echo "host;end;$bw;`date -u`" >> nuttcp_host.log && sleep 0;
        done;

    #######################
    #Agora adiciona no git#
    #######################
    git add *
    git commit -m "update"
    git push

    #Exit container
    exit

#############
#Sair da VM #
#############
shutdown -hP now

#NESSE PONTO, VOCE ESTÁ NO HOST, GERE O ARQUIVO DE ENERGIA E SUBA NO GIT.

curl -kn https://api.grid5000.fr/stable/sites/lyon/metrics/power/timeseries/?job_id=$OAR_JOB_ID > /home/mpillon/grid_tests/energy_"$OAR_JOB_ID".json
